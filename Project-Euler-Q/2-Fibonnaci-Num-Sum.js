/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed n, 
  find the sum of the even-valued terms.
 */

function fiboEvenSum(n) {
  //Returns sum of even Fibonacci numbers which are
  // less than or equal to given limit.

  if (n < 2) return 0;

  // Initialize first two even prime numbers
  // and their sum
  let ef1 = 0,
    ef2 = 2;
  let sum = ef1 + ef2;

  // calculating sum of even Fibonacci value
  while (ef2 <= n) {
    // get next even value of Fibonacci sequence
    let ef3 = 4 * ef2 + ef1;

    // If we go beyond limit, we break loop
    if (ef3 > n) break;

    // Move to next even number and update sum
    ef1 = ef2;
    ef2 = ef3;
    sum += ef2;
  }

  return sum;
}

console.log(fiboEvenSum(8));

/**
 * Fn = Fn-1 + Fn-2 [Expanding both terms]
   = Fn-2 + Fn-3 + Fn-3 + Fn-4 
   = Fn-2 + 2Fn-3 + Fn-4 [Expending first term]
   = Fn-3 + Fn-4 + 2Fn-3 + Fn-4
   = 3Fn-3 + 2Fn-4  [Expending one Fn-4]
   = 3Fn-3 + Fn-4 + Fn-5 + Fn-6 [Combing Fn-4 and Fn-5]
   = 4Fn-3 + Fn-6  

Since every third Fibonacci Number is even, So if Fn is 
even then Fn-3 is even and Fn-6 is also even. Let Fn be
xth even element and mark it as EFx.
If Fn is EFx, then Fn-3 is previous even number i.e. EFx-1
and Fn-6 is previous of EFx-1 i.e. EFx-2
So
Fn = 4Fn-3 + Fn-6
which means,
EFx = 4 * EFx-1 + EFx-2
 */
